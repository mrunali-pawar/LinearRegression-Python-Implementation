library(ggplot2)
library(car)
library(caret)
library(corrplot)
install.packages("car")
install.packages("caret")
install.packages("corrplot")
library(ggplot2)
library(car)
library(caret)
library(corrplot)
install.packages("car")
install.packages("caret")
library(ggplot2)
library(car)
library(caret)
library(corrplot)
#Loading data
data(mtcars)
str(mtcars)
head(mtcars)
summary(mtcars)
#Data Prepration
mtcars$am   = as.factor(mtcars$am)
mtcars$cyl  = as.factor(mtcars$cyl)
mtcars$vs   = as.factor(mtcars$vs)
mtcars$gear = as.factor(mtcars$gear)
mtcars_a = subset(mtcars, select = -c(mpg))
mtcars_a
numericData <- mtcars_a[sapply(mtcars_a, is.numeric)]
numericData
descrCor <- cor(numericData)
print(descrCor)
corrplot(descrCor, order = "FPC", method = "color", type = "lower", tl.cex = 0.7,
tl.col = rgb(0, 0, 0))
highlyCorrelated = findCorrelation(descrCor, cutoff=0.7)
highlyCorCol
highlyCorCol = colnames(numericData)[highlyCorrelated]
highlyCorCol
highlyCorrelated = findCorrelation(descrCor, cutoff=0.7)
highlyCorCol = colnames(numericData)[highlyCorrelated]
highlyCorCol
dat3 = mtcars[, -which(colnames(mtcars) %in% highlyCorCol)]
dim(dat3)
fit = lm(mpg ~ ., data=dat3)
summary(fit)
summary(fit)$coeff
anova(fit)
par(mfrow=c(2,2))
plot(fit)
summary(fit)
anova(fit)
summary(fit)$r.squared
summary(fit)$adj.r.squared
AIC(fit)
BIC(fit)
library(MASS)
step <- stepAIC(fit, direction="both")
summary(step)
step <- stepAIC(fit, direction="backward")
summary(step)
step <- stepAIC(fit, direction="forward")
summary(step)
n = dim(dat3)[1]
n
stepBIC = stepAIC(fit,k=log(n))
summary(stepBIC)
AIC(stepBIC)
BIC(stepBIC)
library(QuantPsyc)
library(DAAG)
data(mtcars)
str(mtcars)
head(mtcars)
